I"©#<p>There is an equation of exponential truncated power law in the article of Gonzalez<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup> below:</p>

\[P(r_g) = (r_g + r_g^0)^{-\beta_r} e^{-r_g/K}\]

<p>To solve this problem, we asked it on <a href="http://stackoverflow.com/questions/43444794/how-to-estimate-the-parameters-of-an-exponential-truncated-power-law">stackoverflow</a>, and Michael suggested to <code class="language-plaintext highlighter-rouge">have a look at scipy.optimize.curve_fit</code>.</p>

<h2 id="toy-data">Toy Data</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="n">rg</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span> <span class="mf">20.7863444</span> <span class="p">,</span>   <span class="mf">9.40547933</span><span class="p">,</span>   <span class="mf">8.70934714</span><span class="p">,</span>   <span class="mf">8.62690145</span><span class="p">,</span>
     <span class="mf">7.16978087</span><span class="p">,</span>   <span class="mf">7.02575052</span><span class="p">,</span>   <span class="mf">6.45280959</span><span class="p">,</span>   <span class="mf">6.44755478</span><span class="p">,</span>
     <span class="mf">5.16630287</span><span class="p">,</span>   <span class="mf">5.16092884</span><span class="p">,</span>   <span class="mf">5.15618737</span><span class="p">,</span>   <span class="mf">5.05610068</span><span class="p">,</span>
     <span class="mf">4.87023561</span><span class="p">,</span>   <span class="mf">4.66753197</span><span class="p">,</span>   <span class="mf">4.41807645</span><span class="p">,</span>   <span class="mf">4.2635671</span> <span class="p">,</span>
     <span class="mf">3.54454372</span><span class="p">,</span>   <span class="mf">2.7087178</span> <span class="p">,</span>   <span class="mf">2.39016885</span><span class="p">,</span>   <span class="mf">1.9483156</span> <span class="p">,</span>
     <span class="mf">1.78393238</span><span class="p">,</span>   <span class="mf">1.75432688</span><span class="p">,</span>   <span class="mf">1.12789787</span><span class="p">,</span>   <span class="mf">1.02098332</span><span class="p">,</span>
     <span class="mf">0.92653501</span><span class="p">,</span>   <span class="mf">0.32586582</span><span class="p">,</span>   <span class="mf">0.1514813</span> <span class="p">,</span>   <span class="mf">0.09722761</span><span class="p">,</span>
     <span class="mf">0.</span>        <span class="p">,</span>   <span class="mf">0.</span>        <span class="p">])</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># calculate P(rg)
</span><span class="n">rg</span> <span class="o">=</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">rg</span><span class="p">,</span> <span class="n">reverse</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">rg</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">(</span><span class="n">rg</span><span class="p">)</span>
<span class="n">prg</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">rg</span><span class="p">))</span> <span class="o">/</span> <span class="nb">float</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">rg</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="solution">Solution</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">func</span><span class="p">(</span><span class="n">rg</span><span class="p">,</span> <span class="n">rg0</span><span class="p">,</span> <span class="n">beta</span><span class="p">,</span> <span class="n">K</span><span class="p">):</span>
    <span class="k">return</span> <span class="p">(</span><span class="n">rg</span> <span class="o">+</span> <span class="n">rg0</span><span class="p">)</span> <span class="o">**</span> <span class="p">(</span><span class="o">-</span><span class="n">beta</span><span class="p">)</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="o">-</span><span class="n">rg</span> <span class="o">/</span> <span class="n">K</span><span class="p">)</span>

<span class="kn">from</span> <span class="nn">scipy</span> <span class="kn">import</span> <span class="n">optimize</span>
<span class="n">popt</span><span class="p">,</span> <span class="n">pcov</span> <span class="o">=</span> <span class="n">optimize</span><span class="p">.</span><span class="n">curve_fit</span><span class="p">(</span><span class="n">func</span><span class="p">,</span> <span class="n">rg</span><span class="p">,</span> <span class="n">prg</span><span class="p">,</span> <span class="n">p0</span><span class="o">=</span><span class="p">[</span><span class="mf">1.8</span><span class="p">,</span> <span class="mf">0.15</span><span class="p">,</span> <span class="mi">5</span><span class="p">])</span>
<span class="k">print</span> <span class="n">popt</span>
<span class="k">print</span> <span class="n">pcov</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[  1.04303608e+03   3.02058550e-03   4.85784945e+00]
[[  1.38243336e+18  -6.14278286e+11  -1.14784675e+11]
 [ -6.14278286e+11   2.72951900e+05   5.10040746e+04]
 [ -1.14784675e+11   5.10040746e+04   9.53072925e+03]]
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">%</span><span class="n">matplotlib</span> <span class="n">inline</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="n">plt</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">rg</span><span class="p">,</span> <span class="n">prg</span><span class="p">,</span> <span class="s">'bs'</span><span class="p">,</span> <span class="n">alpha</span> <span class="o">=</span> <span class="mf">0.3</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">rg</span><span class="p">,</span> <span class="p">(</span><span class="n">rg</span><span class="o">+</span><span class="n">popt</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">**-</span><span class="p">(</span><span class="n">popt</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="o">-</span><span class="n">rg</span><span class="o">/</span><span class="n">popt</span><span class="p">[</span><span class="mi">2</span><span class="p">]),</span> <span class="s">'r-'</span> <span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">yscale</span><span class="p">(</span><span class="s">'log'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">xscale</span><span class="p">(</span><span class="s">'log'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'$r_g$'</span><span class="p">,</span> <span class="n">fontsize</span> <span class="o">=</span> <span class="mi">20</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'$P(r_g)$'</span><span class="p">,</span> <span class="n">fontsize</span> <span class="o">=</span> <span class="mi">20</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="http://oaf2qt3yk.bkt.clouddn.com/d661b220e4c594b771e08ccdb799dd42.png" alt="fitted exponential truncated power law" /></p>

<h1 id="ÂèÇËÄÉÊñáÁåÆ">ÂèÇËÄÉÊñáÁåÆ</h1>
<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>Gonzalez, M. C., Hidalgo, C. A., &amp; Barabasi, A. L. (2008). Understanding individual human mobility patterns. Nature, 453(7196), 779-782.¬†<a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>
:ET